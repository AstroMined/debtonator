"""Initial schema with relationships

Revision ID: 1d26ae49f3b8
Revises: 
Create Date: 2025-02-08 17:32:23.048141

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1d26ae49f3b8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False, comment='Type of account (credit, checking, savings)'),
    sa.Column('available_balance', sa.Numeric(precision=10, scale=2), nullable=False, comment='Current available balance'),
    sa.Column('available_credit', sa.Numeric(precision=10, scale=2), nullable=True, comment='Available credit for credit accounts'),
    sa.Column('total_limit', sa.Numeric(precision=10, scale=2), nullable=True, comment='Total credit limit for credit accounts'),
    sa.Column('last_statement_balance', sa.Numeric(precision=10, scale=2), nullable=True, comment='Balance from last statement'),
    sa.Column('last_statement_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.Column('updated_at', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_accounts_name', 'accounts', ['name'], unique=False)
    op.create_table('cashflow_forecasts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('total_bills', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_income', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('balance', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('forecast', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('min_14_day', sa.Numeric(precision=10, scale=2), nullable=False, comment='Minimum required funds for next 14 days'),
    sa.Column('min_30_day', sa.Numeric(precision=10, scale=2), nullable=False, comment='Minimum required funds for next 30 days'),
    sa.Column('min_60_day', sa.Numeric(precision=10, scale=2), nullable=False, comment='Minimum required funds for next 60 days'),
    sa.Column('min_90_day', sa.Numeric(precision=10, scale=2), nullable=False, comment='Minimum required funds for next 90 days'),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.Column('updated_at', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_forecasts_date', 'cashflow_forecasts', ['date'], unique=False)
    op.create_table('income',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('source', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('deposited', sa.Boolean(), nullable=False),
    sa.Column('undeposited_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Calculated field for undeposited amounts'),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.Column('updated_at', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_income_date', 'income', ['date'], unique=False)
    op.create_index('idx_income_deposited', 'income', ['deposited'], unique=False)
    op.create_table('bills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('month', sa.String(length=10), nullable=False),
    sa.Column('day_of_month', sa.Integer(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('paid_date', sa.Date(), nullable=True),
    sa.Column('bill_name', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('up_to_date', sa.Boolean(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=50), nullable=False),
    sa.Column('auto_pay', sa.Boolean(), nullable=False),
    sa.Column('paid', sa.Boolean(), nullable=False),
    sa.Column('amex_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('unlimited_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('ufcu_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.Column('updated_at', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_bills_account_id', 'bills', ['account_id'], unique=False)
    op.create_index('idx_bills_account_name', 'bills', ['account_name'], unique=False)
    op.create_index('idx_bills_due_date', 'bills', ['due_date'], unique=False)
    op.create_index('idx_bills_paid_date', 'bills', ['paid_date'], unique=False)
    op.create_table('recurring_bills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bill_name', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('day_of_month', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('auto_pay', sa.Boolean(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.Column('updated_at', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('bill_id', sa.Integer(), nullable=True),
    sa.Column('income_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.Column('updated_at', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['bill_id'], ['bills.id'], ),
    sa.ForeignKeyConstraint(['income_id'], ['income.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_transactions_account', 'account_transactions', ['account_id'], unique=False)
    op.create_index('idx_transactions_date', 'account_transactions', ['transaction_date'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_transactions_date', table_name='account_transactions')
    op.drop_index('idx_transactions_account', table_name='account_transactions')
    op.drop_table('account_transactions')
    op.drop_table('recurring_bills')
    op.drop_index('idx_bills_paid_date', table_name='bills')
    op.drop_index('idx_bills_due_date', table_name='bills')
    op.drop_index('idx_bills_account_name', table_name='bills')
    op.drop_index('idx_bills_account_id', table_name='bills')
    op.drop_table('bills')
    op.drop_index('idx_income_deposited', table_name='income')
    op.drop_index('idx_income_date', table_name='income')
    op.drop_table('income')
    op.drop_index('idx_forecasts_date', table_name='cashflow_forecasts')
    op.drop_table('cashflow_forecasts')
    op.drop_index('idx_accounts_name', table_name='accounts')
    op.drop_table('accounts')
    # ### end Alembic commands ###
